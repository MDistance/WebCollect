Day05 函数**********
一、  函数基本使用 
	概念，定义（表达式，字面量），作用
		什么是函数：
			具有某种特定功能的代码块~      //想象成工具或者工厂
			
		为什么要有函数
			1、解决代码的冗余问题，形成代码复用；
			2、可以把整个代码项目，通过函数模块化；
			3、封装代码，让函数内部的代码对外部不可见；
			
		
		函数引入
			打印等腰三角形
			

		函数定义（字面量定义和表达式定义   先定义后使用   三要素***）
			字面量定义：

				function 函数名（）{

					代码块；（函数体）
				}
				
			函数表达式定义：
				var 变量名（函数名） = function(){
					代码块；（函数体）
				}

			函数的定义：三要素：  功能（函数名，见名思意，看到了函数名就想到了这个函数的功能，函数名字最好使用动词）
					     参数：（）里面是函数的参数，定义函数的时候要考虑这个函数是否有参数；
					     返回值：函数最终都会有一个返回值；定义函数的时候也要考虑这个函数是否需要返回值；
			
		


		函数调用	
			本质上是函数调用表达式；这个表达式整体的值就是函数定义当中return后面的值；如果函数定义当中没有写return，那么
			其实相当于默认return的是一个undefined.只是把return省略了；return关键字在函数当中一是用来返回值，二是当函数执行到
			return的时候，函数就立即结束了，即使return下面还有代码，也不再执行；


			参数：函数定义的时候我们要考虑的三要素包含了一个参数；参数在函数定义当中被称作形式参数，简称形参；
			      函数调用的时候，我们在（）当中所写的也叫做参数，叫做实际参数，简称实参；
			      函数调用的时候，我们写实际参数被称作函数传参，传参的本质是把函数调用的实参，赋值给函数定义的形参；
			      函数的实参，肯定是一个有值的东西；
			      函数定义的形参：本质上相当于在函数内部var了变量；

			函数定义：
			function add (a,b){
				
				return a + b;
				console.log('i love you! zhao li ying~');
			}
			函数调用：
			add(8,10);		
				
		
	
二、 函数的分类
	1)	无参无返回值   //通常情况下   很少有这样的函数，一般都是需要将代码模块化的时候，纯粹的去封装功能使用的；
	2)	有参无返回值   //
	3)	无参有返回值
	4)	有参有返回值

	
	

三、 强化练习

	编写求1到n的和函数
	编写函数实现求一个数的阶乘
	编写函数求数组的最大值，最小值
	封装函数加工数组，每一项加10输出
	封装函数实现打印1到N的质数;
	封装函数实现对数组进行排序；
	封装函数实现对数组翻转
	封装函数实现对数组去重












	******函数的调用过程（内存角度）
	


四、  作用域
	1)	作用域概念，定义，作用，全局作用域和局部作用域
	2)	全局变量和局部变量
	3)      作用域链
	4)	案例:
	面试题
		var num = 10;
		function fun() {
  			var num = 20;
  			fun2();
		}


		function fun2() {
  			console.log(num);
		}


		fun();


第五节: 预解析 
	a)	预解析演示
	b)	预解析效果, 作用
	c)	面试题:

	--------------------------------------------------------
	
	alert(a);    
	a = 0;
	
	--------------------------------------------------------

	alert(a);    
	var a = 0;
	alert(a);    

	--------------------------------------------------------

	alert(a);    
	var a = '我是变量';
	function a(){ alert('我是函数') }
	alert(a);    

	--------------------------------------------------------

	alert(a); 
	a++;
	alert(a);    
	var a = '我是变量';
	function a(){ alert('我是函数') }
	alert(a)   

	--------------------------------------------------------

	alert(a);   
	var a = 0;
	alert(a);   
	function fn(){
 		alert(a);    
 		var a = 1;
 		alert(a);    
	}
	fn()
	alert(a);    

	--------------------------------------------------------


	alert(a);    
	var a = 0;
	alert(a);    
	function fn(){
   		alert(a);    
   		a = 1;
   		alert(a);   
	}
	fn()
	alert(a);   

	--------------------------------------------------------

第六节: IIFE，回调函数 函数递归  arguments     

IIFE: Immediately Invoked Function Expression，意为立即调用的函数表达式，也就是说，声明函数的同时立即调用这个函数。


Arguments  函数实参伪数组


回调函数：函数是我定义的   我没有调用    最终执行了~
	事件
	定时器
	ajax
	生命周期回调函数

函数递归


晚自习强化练习
	作业: 
		面试题: 函数，作用域，预解析（必须理解）
		
	
